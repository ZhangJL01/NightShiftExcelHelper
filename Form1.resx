<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AACzvL0AuL/RALS8xy+yvc27srzP/7m+0f+/w9H/xcnT/8fN1f+1vsf/rrTG/6+0yP+stMb/rLPF/6ev
        wf+3vMr/vcPN/6ixwP+eq7jxn6u57q20xf+vs8TvrbK/OaywvwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAALm/zQC5v8wnuL/Qy7vC1P+/xNX/wMTS/7zAy/+xucH/na61/5inrv+vtMP/s7bJ/7K2
        yP+utsb/qrLB/7a9yf/CydH/s7zG/6Kuuv+jrr3/qa/B/6iuwf+hq7qWoKi2BaGmtwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAucXPBrjB1J25wdX/u8LS/7zBzf+7wcn/sLzF/423vv+Ku77/krS4/6e0
        vv+0t8T/t7rH/7e6yP+0ucX/t7/I/7/Hz/+4wsv/qbK+/6ixv/+orr//o6u9/5ekt/Sap7h+q7i9C6i0
        vQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC6xNQytMDR5bDAy/+sv8L/vsbI/8HJyP+ryMX/fcG+/3LI
        w/+Iy8f/kcbE/5u8v/+vucH/uLzH/7a7xP+yvMT/s8HI/6++xf+jtb3/orG8/6qvv/+mrb7/m6e5/5il
        t/qfqbiNn6u1DpijrwAAAAAAAAAAAAAAAAAAAAAAAAAAAL3F03G1wc78u8nK/7DGwv+7ysf/vNPN/6TR
        xv+k0cj/lc/G/5DQxv+Y08v/jMzG/5S/wf+js7n/pbe8/563uv+Yt7f/l7a3/5S1t/+Rsrf/oq+5/62w
        v/+krL3/nKa4/5ynufucqbifmayvHZiosgAAAAAAAAAAAAAAAAAAAAAAwsjQqMfN0//KztH/wMzM/8LP
        zv+81M//sdbM/6bZzf+K0sP/hc+//5vWyv+Q0cn/e8vG/4W+vf+Gt7X/j7m0/4W5rf+Jua3/j7mw/3iv
        qP97q6r/obC5/6Wvvv+iqrz/oKm6/5unuP+Gpae6fqyhHneongAAAAAAAAAAAAAAAADU2N3n19fc/97b
        4P/e29//4d7g/9vc3P/N29f/rdnO/5bTxP+a08X/i9PE/5LWyv9sxr3/f8/H/37Kwf98ta3/gbqt/4S+
        sP98vKz/Wq6e/1+sof98rar/ka62/5eruP+fq7r/oqq6/3ejo/9eppSemcK1CYa5qwAAAAAAAAAAANrc
        4eDd3eP/393j/97e4v/d3eH/3d3h/9vc3v/P2dX/t9PL/6PRxf+Czr//idDD/5PUx/+V2Mz/itjO/3jG
        vP93ua7/hb+x/3G7qf9auKT/U7Kd/16smv9zr6f/eKyt/4CqsP+OqLH/bKeg/1Culvd0u6dx//7/AZW+
        sgAAAAAA2Nzhqdrc4v/b3eT/3N7k/9nc4f/U193/0dbZ/9HW1v/N2Nf/udXP/6PVyv+U1cv/itfL/4jY
        zf991s7/ftrQ/33Kwv+FwbL/fMSx/1u7pf9NtJz/Tq2X/1qum/9hr6H/arGp/2umpf9aqZz/Urmf/2y9
        p+OLva8vhbutAAAAAADg4uRw5Obr/Obm7v/l5Ov/4N/l/9va4f/X2t//0Nfa/8jX2P++1dP/rNPN/57S
        y/+Y1s//i9XN/4jXzf+G3NH/jdPL/5e/tf97uqv/RKmQ/1W+pv9Vvqj/Vrik/1e1nv9UsJz/YLWp/2HE
        tP9hybL/asWq/4G+qX8Yo3QAvtnPAOrr7D7x7/Ts8/D5//Tu+P/w6vH/6uTq/+Tj6P/d4OT/19zf/8vY
        2f+00c//q9PR/6DV0v+X1NH/jNPN/4nOxv+Bxrv/g7mu/2y2pv9ZwKf/atK8/2rUvv9ezrf/Y8ew/1q+
        qP9Tvab/Wsmw/17Lsv9mya3/dsSrvZ/BuAqUxLYA7OvuC/Tz96749vr/+vb6//nz+P/07/P/8Ovv/+jm
        6//i4eX/293g/8rY2/+719j/rNXW/5LPzv90xML/br+0/2q9rv9ctqb/TLKc/2PNtP9n0rz/Wcy4/1PM
        t/9eyrX/YMav/1a+n/9JtJH/Tr6f/13Dpv9qwaXxhcq1SXzGrwD19PUA8/LzPvn4+On8+fj//fn4//v3
        +P/38vX/9u/0/+/p7//i4eb/29zh/8vY3P+v09X/jcjI/3K5uP98zMH/Zcq4/1K9qf87r5f/TcCo/03C
        rP9Uz7//TtDH/0bGtf8+vqb/QLue/0PBpP9Xz7X/WsWp/1+9nf9tv6Wb19HQAu/u7gDj5OQC+Pb3Zvv4
        +ej9+vr//fr7//v4+f/69Pj/9+/4//Dr8v/j4eb/19rg/7XLzP+Gt7T/cLq2/2rOw/9SxbD/QLaf/0vB
        qv9dzLj/V8ez/0rDrf9HwKT/RcCg/zTBo/9I0Lf/StnG/1ve0/9S0Lv/UMip/2rHsM2Tyb0XAAAAAPPy
        8gDv7+4C9vX2Ovv7/JL9/P7R/fz8+v76+v/69Pf/9+/2//Ls9f/U2t//jbey/3Kvpf9uyb3/WMq4/z+3
        nf9Hxar/asW0/4nHv/+Pz8j/YMm0/1fPqP9b0qv/Ysyy/23Puv9Py7L/VNzP/1zf2f9c2Mz/atPF+Inc
        0osAAAAAAAAAAAAAAAD4+foA9vn4Afv6/Bj6+fpo+/n5z/z4+Pz68vX/9e71/7vY2/92zL//aMez/1rJ
        s/9BqpX/Q7ik/1PDrv+f0sv/1ebs/9bs8f94yrX/VdCn/1jOp/+l3dL/wuDi/2nQuf9C1Lj/W+re/27l
        3/+A49r/gd/U9wAAAAAAAAAAAAAAAAAAAAAAAAAA6OjpAAAAAAD09PQa9/T1fvnz8un38PD/sNfT/2vS
        wv9TybP/QrCX/0Sznv9szsT/qtrX/+Tx9v/r8/z/ttXX/0+mjP80n3j/M511/5jFvP/k8fr/sOPh/2jO
        vf9W2Mj/d+jg/4Po3v940sT/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAO/v7wDn7vAC9u/vRujs
        6d6Ez7//Rbea/z20l/9hz7n/VsOu/6DTz//n7/f/8vb+/9no7v+92Nz/n8jH/2mmlv9SnIP/pMrJ/9bm
        7v/i8vn/hsvC/0jKvP9h59v/e+XX/4TXxtYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAO/u
        7QA+wKYAu+LZbmLAq/5ZuZ7/XL6k/3bYw/9o0Lr/s9rZ//L0///k7/b/2ery/+Pw9//c7PP/vt3f/6rS
        0P/W6/D/0ubu/9fv9P+D0cf/YNvX/3Dj2f920r7+is66iAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAIHSvgCK08FbYsGp/WnNuP941sD/aNC6/13LtP+44d//5O/6/9Dm7f/b7fP/8PX9/+Tw
        9P+AwK3/X7CV/7Ta1/+4393/nd3Q/2LEr/9b08X/g+LT/4rQvc+X0b81AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAiNXCAJTZyFhpxa38Z8my/37axv913cf/b9rD/57d0v+04+L/rdPV/6XB
        xP/i8Pb/zerp/2y6ov9tuqL/hMC0/4TWwf9rzbP/Sb2k/1jYwf984tHVn9HJMm/l0wAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACV2ccAl9jGM3jOt+6A2ML/kODO/47m1P9t0rv/c9a6/37f
        xP980r3/lczA/9/y9P+y6N3/g9rD/6zo2/+a4tH/ctO2/4bJtv9Ywa7/XNnD/3zWx6/cxMsFpc/JAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJzdzwCh3tA+hNW98nTfyP+O5dP/h9bF/4nH
        t/9+0Lf/ate0/2vct/9+4ML/penY/4Hhw/9s3Lf/ctm6/4XWw/+azMP/ts/O/37Fuv9rzLX8i9bHgP/L
        4gKp0swAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoevdAKXr3j2S5dLtgeHN/4Pc
        x/+Gyrn/lcvA/5DDuv+FzL//ccuy/2fIpv9ly6r/W8ak/1XFpf9YwKT/idDF/6bZ2P+e1NH/gsm+/33J
        tfObzsBOlM+/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACz6eAAtezjB63o
        3kWg3tGPfdG8+ZDRv/96wrX/cLqx/33Duf9zv6z/bbyh/3zLsf9rx63/Y8y4/3bVwv9ux7b/h83B/4bL
        wv+M0MX/hNPD3JTPwyWU0MQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAs9/YALXg2TCb1sfcmdLA/HzAsv95wLb/dsCy/3nItv+M1sT/mePR/5bj0P+K1sT/m93M/33Z
        xv9xzLb/lNLC/53c0PyQ1MbCns3DFaDNwwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADC3dgAwtzZCbvZzy2s1sZqnNDEqonIvsiAyrzvktjJ2aPe0OKZ49P/nurW/6Hk
        z/+Z28f/h9XC/3/MufiV0cGUltrNa6XXzSO0xcADr8fBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////AP///wC/1tAEhsK3D4vPwzaJzcEdstzSN5bX
        yZya3My5qtrKlZvXxY6C2cfSidPFtqbQyCCd3dAA6FR2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACx2M8AtdrRAqnQyAm1w8YBlsi/AaDa0Rav4doOoendAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAwAAB/4AAAP8AAAB/AAAAPwAAAB8AAAAPAAAABwAAAAMAAAADAAAAAwAA
        AAEAAAABgAAAAIAAAADAAAAA8AAAAPwAAAD/AAAA/8AAAP/AAAD/wAAB/8AAAf/AAAH/wAAD/8AAA//w
        AAP/8AAD//wAH///8D////////////////8=
</value>
  </data>
</root>